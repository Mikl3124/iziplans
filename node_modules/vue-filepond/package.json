{
  "_from": "vue-filepond",
  "_id": "vue-filepond@6.0.2",
  "_inBundle": false,
  "_integrity": "sha512-HE1TvV2LrKMU3pFeIBbR9Uf6cryNLVnnl35uSL+HLsZ6rfZ3C1alfre3UcaSoKTVuxNsn41Ce4IR528UwdxZfw==",
  "_location": "/vue-filepond",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "vue-filepond",
    "fetchSpec": "latest",
    "name": "vue-filepond",
    "raw": "vue-filepond",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/vue-filepond/-/vue-filepond-6.0.2.tgz",
  "_shasum": "416cfaafe7e4356b169cbdf9e1c3cd3d2043d547",
  "_spec": "vue-filepond",
  "_where": "C:\\laragon\\www\\iziplans",
  "author": {
    "name": "PQINA",
    "url": "https://pqina.nl"
  },
  "browser": "dist/vue-filepond.js",
  "bugs": {
    "url": "https://github.com/pqina/vue-filepond/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A handy FilePond adapter component for Vue",
  "devDependencies": {
    "@babel/cli": "^7.7.7",
    "@babel/core": "^7.7.7",
    "@babel/plugin-transform-modules-umd": "^7.7.4",
    "@babel/preset-env": "^7.7.7",
    "bannerjs": "^1.0.7",
    "filepond": "4.9.3",
    "minicat": "^1.0.0",
    "mkdirp": "^0.5.1",
    "nodemon": "^2.0.2",
    "typescript": "^3.7.4",
    "uglify-js": "^3.7.3",
    "vue": "2.6.11"
  },
  "files": [
    "dist",
    "types/*.d.ts"
  ],
  "homepage": "https://pqina.nl/filepond",
  "keywords": [
    "browse",
    "drag",
    "drop",
    "file",
    "filepond",
    "image",
    "preview",
    "upload",
    "vue",
    "vuejs"
  ],
  "license": "MIT",
  "main": "dist/vue-filepond.js",
  "module": "dist/vue-filepond.esm.js",
  "name": "vue-filepond",
  "optionalDependencies": {},
  "peerDependencies": {
    "filepond": ">=4.7.4 < 5.x",
    "vue": ">=2.6.0 < 3.x"
  },
  "readme": "# Vue FilePond\n\nVue FilePond is a handy adapter component for [FilePond](https://github.com/pqina/filepond), a JavaScript library that can upload anything you throw at it, optimizes images for faster uploads, and offers a great, accessible, silky smooth user experience.\n\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/pqina/vue-filepond/blob/master/LICENSE)\n[![npm version](https://badge.fury.io/js/vue-filepond.svg)](https://www.npmjs.com/package/vue-filepond)\n\n<img src=\"https://github.com/pqina/filepond-github-assets/blob/master/filepond-animation-01.gif?raw=true\" width=\"370\" alt=\"\"/>\n\n### Core Features\n\n*   Accepts **directories**, **files**, blobs, local URLs, **remote URLs** and Data URIs.\n*   **Drop files**, select on filesystem, **copy and paste files**, or add files using the API.\n*   **Async uploading** with AJAX, or encode files as base64 data and send along form post.\n*   **Accessible**, tested with AT software like VoiceOver and JAWS, **navigable by Keyboard**.\n*   **Image optimization**, automatic image resizing, **cropping**, and **fixes EXIF orientation**.\n*   **Responsive**, automatically scales to available space, is functional on both **mobile and desktop devices**.\n\n[Learn more about FilePond](https://pqina.nl/filepond/)\n\n\n---\n\n### Also need Image Editing?\n\n**Doka.js** might be just what you're looking for. It's a Modern JavaScript Image Editor, Doka supports setting **crop aspect ratios**, **resizing**, **rotating**, **cropping**, and **flipping** images. Above all, it integrates beautifully with FilePond.\n\n[Learn more about Doka](https://pqina.nl/doka/)\n\n<img src=\"https://github.com/pqina/filepond-github-assets/blob/master/doka.gif?raw=true\" width=\"478\" alt=\"\"/>\n\n---\n\nInstallation:\n\n```bash\nnpm install vue-filepond filepond --save\n```\n\nUsage:\n\n```vue\n<template>\n  <div id=\"app\">\n\n    <file-pond\n        name=\"test\"\n        ref=\"pond\"\n        label-idle=\"Drop files here...\"\n        v-bind:allow-multiple=\"true\"\n        accepted-file-types=\"image/jpeg, image/png\"\n        server=\"/api\"\n        v-bind:files=\"myFiles\"\n        v-on:init=\"handleFilePondInit\"/>\n\n  </div>\n</template>\n\n<script>\n// Import Vue FilePond\nimport vueFilePond from 'vue-filepond';\n\n// Import FilePond styles\nimport 'filepond/dist/filepond.min.css';\n\n// Import FilePond plugins\n// Please note that you need to install these plugins separately\n\n// Import image preview plugin styles\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\n\n// Import image preview and file type validation plugins\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\n\n// Create component\nconst FilePond = vueFilePond(FilePondPluginFileValidateType, FilePondPluginImagePreview);\n\nexport default {\n    name: 'app',\n    data: function() {\n        return { myFiles: ['cat.jpeg'] };\n    },\n    methods: {\n        handleFilePondInit: function() {\n            console.log('FilePond has initialized');\n\n            // FilePond instance methods are available on `this.$refs.pond`\n        }\n    },\n    components: {\n        FilePond\n    }\n};\n</script>\n```\n\nWhen using FilePond with an SSR configuration like Nuxt.js it's best to wrap it in `<no-ssr>` tags.\n\n```vue\n<template>\n    <no-ssr>\n        <file-pond/>\n    </no-ssr>\n</template>\n```\n\nUsage in the browser:\n\n```html\n<!doctype html>\n<html>\n  <head>\n    <title>Vue in Browser</title>\n    \n    <link rel=\"stylesheet\" href=\"https://unpkg.com/filepond/dist/filepond.min.css\">\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\">\n\n  </head>\n  <body>\n    \n    <div id=\"app\">\n        <file-pond></file-pond>\n    </div>\n    \n    <script src=\"https://unpkg.com/filepond-plugin-image-preview\"></script>\n    <script src=\"https://unpkg.com/filepond\"></script>\n    <script src=\"https://unpkg.com/vue\"></script>\n    <script src=\"https://unpkg.com/vue-filepond\"></script>\n    \n    <script>\n    new Vue({\n        el: '#app',\n        components: {\n            FilePond: vueFilePond.default(FilePondPluginImagePreview)\n        }\n    })\n    </script>\n    \n  </body>\n</html>\n```\n\n\n[Read the docs for more information](https://pqina.nl/filepond/docs/patterns/frameworks/vue/)\n\n[Live Demo with Code Sandbox](https://codesandbox.io/s/p3v8zoprp7)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pqina/vue-filepond.git"
  },
  "scripts": {
    "build": "mkdirp dist && npm run build:browser && npm run build:module",
    "build:browser": "babel lib | bannerjs -m > dist/vue-filepond.js",
    "build:module": "minicat lib/index.js | bannerjs -m > dist/vue-filepond.esm.js",
    "build:watch": "nodemon --watch lib -x \"npm run build\"",
    "postbuild:browser": "uglifyjs dist/vue-filepond.js --compress --comments '/^!/' --output dist/vue-filepond.min.js",
    "prepare": "npm run build"
  },
  "types": "types/index.d.ts",
  "unpkg": "dist/vue-filepond.min.js",
  "version": "6.0.2"
}
